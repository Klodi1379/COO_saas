# Generated by Django 5.2.2 on 2025-06-10 01:32

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='KPICategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('category_type', models.CharField(choices=[('financial', 'Financial'), ('operational', 'Operational'), ('customer', 'Customer'), ('growth', 'Growth'), ('team', 'Team Performance'), ('quality', 'Quality'), ('sustainability', 'Sustainability'), ('innovation', 'Innovation')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code', max_length=7)),
                ('icon', models.CharField(blank=True, help_text='Font Awesome icon class', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
            ],
            options={
                'verbose_name_plural': 'KPI Categories',
                'ordering': ['display_order', 'name'],
                'unique_together': {('tenant', 'name')},
            },
        ),
        migrations.CreateModel(
            name='KPIDashboard',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('layout', models.JSONField(default=dict, help_text='Dashboard layout configuration')),
                ('is_public', models.BooleanField(default=False)),
                ('refresh_interval', models.PositiveIntegerField(default=300, help_text='Auto-refresh interval in seconds')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kpi_dashboards', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, related_name='shared_dashboards', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DashboardKPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position_x', models.PositiveIntegerField(default=0)),
                ('position_y', models.PositiveIntegerField(default=0)),
                ('width', models.PositiveIntegerField(default=6)),
                ('height', models.PositiveIntegerField(default=4)),
                ('chart_type_override', models.CharField(blank=True, max_length=20)),
                ('title_override', models.CharField(blank=True, max_length=200)),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kpis.kpidashboard')),
            ],
            options={
                'ordering': ['position_y', 'position_x'],
            },
        ),
        migrations.CreateModel(
            name='SmartKPI',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('data_source_type', models.CharField(choices=[('manual', 'Manual Entry'), ('api', 'API Integration'), ('csv_upload', 'CSV Upload'), ('database', 'Database Query'), ('calculated', 'Calculated from Other KPIs')], default='manual', max_length=20)),
                ('data_source_config', models.JSONField(blank=True, default=dict, help_text='Configuration for automated data collection')),
                ('calculation_method', models.CharField(choices=[('sum', 'Sum'), ('average', 'Average'), ('count', 'Count'), ('percentage', 'Percentage'), ('ratio', 'Ratio'), ('custom', 'Custom Formula')], default='sum', max_length=20)),
                ('calculation_formula', models.TextField(blank=True, help_text='Custom formula for calculated KPIs (use Python syntax)')),
                ('unit', models.CharField(blank=True, help_text="e.g., '$', '%', 'hours', 'count'", max_length=20)),
                ('decimal_places', models.PositiveIntegerField(default=2)),
                ('target_value', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('warning_threshold', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('critical_threshold', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('trend_direction', models.CharField(choices=[('up_good', 'Higher is Better'), ('down_good', 'Lower is Better'), ('stable_good', 'Stable is Better')], default='up_good', max_length=15)),
                ('auto_update_frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], default='monthly', max_length=20)),
                ('last_auto_update', models.DateTimeField(blank=True, null=True)),
                ('next_auto_update', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False, help_text='Show on main dashboard')),
                ('chart_type', models.CharField(choices=[('line', 'Line Chart'), ('bar', 'Bar Chart'), ('area', 'Area Chart'), ('gauge', 'Gauge'), ('number', 'Number Display')], default='line', max_length=20)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='kpis', to='kpis.kpicategory')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_kpis', to=settings.AUTH_USER_MODEL)),
                ('parent_kpis', models.ManyToManyField(blank=True, help_text='KPIs this one depends on for calculation', related_name='dependent_kpis', to='kpis.smartkpi')),
                ('stakeholders', models.ManyToManyField(blank=True, help_text='Users who should be notified about this KPI', related_name='stakeholder_kpis', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Smart KPI',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='KPIDataPoint',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('value', models.DecimalField(decimal_places=4, max_digits=15)),
                ('source', models.CharField(choices=[('manual', 'Manual Entry'), ('api', 'API Import'), ('csv', 'CSV Upload'), ('calculated', 'Auto-calculated')], default='manual', max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('is_estimated', models.BooleanField(default=False)),
                ('confidence_level', models.PositiveIntegerField(default=100, help_text='Confidence in this data point (0-100%)')),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('kpi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datapoints', to='kpis.smartkpi')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='kpidashboard',
            name='kpis',
            field=models.ManyToManyField(through='kpis.DashboardKPI', to='kpis.smartkpi'),
        ),
        migrations.CreateModel(
            name='KPIAlert',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('threshold_breach', 'Threshold Breach'), ('trend_warning', 'Trend Warning'), ('data_missing', 'Data Missing'), ('target_achieved', 'Target Achieved'), ('improvement_opportunity', 'Improvement Opportunity')], max_length=30)),
                ('severity', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('critical', 'Critical')], max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('trigger_value', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('threshold_value', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('is_acknowledged', models.BooleanField(default=False)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL)),
                ('kpi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='kpis.smartkpi')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='dashboardkpi',
            name='kpi',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kpis.smartkpi'),
        ),
        migrations.AddIndex(
            model_name='smartkpi',
            index=models.Index(fields=['tenant', 'is_active'], name='kpis_smartk_tenant__361d80_idx'),
        ),
        migrations.AddIndex(
            model_name='smartkpi',
            index=models.Index(fields=['tenant', 'is_featured'], name='kpis_smartk_tenant__287d3a_idx'),
        ),
        migrations.AddIndex(
            model_name='smartkpi',
            index=models.Index(fields=['data_source_type', 'next_auto_update'], name='kpis_smartk_data_so_65ff33_idx'),
        ),
        migrations.AddIndex(
            model_name='kpidatapoint',
            index=models.Index(fields=['kpi', 'date'], name='kpis_kpidat_kpi_id_5f6d2c_idx'),
        ),
        migrations.AddIndex(
            model_name='kpidatapoint',
            index=models.Index(fields=['date', 'source'], name='kpis_kpidat_date_c9dcbd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='kpidatapoint',
            unique_together={('kpi', 'date')},
        ),
        migrations.AddIndex(
            model_name='kpialert',
            index=models.Index(fields=['kpi', 'is_resolved'], name='kpis_kpiale_kpi_id_743384_idx'),
        ),
        migrations.AddIndex(
            model_name='kpialert',
            index=models.Index(fields=['severity', 'is_acknowledged'], name='kpis_kpiale_severit_a4e280_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dashboardkpi',
            unique_together={('dashboard', 'kpi')},
        ),
    ]
