# Generated by Django 5.2.2 on 2025-06-10 01:32

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardTheme',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('primary_color', models.CharField(default='#007bff', max_length=7)),
                ('secondary_color', models.CharField(default='#6c757d', max_length=7)),
                ('background_color', models.CharField(default='#ffffff', max_length=7)),
                ('text_color', models.CharField(default='#333333', max_length=7)),
                ('theme_config', models.JSONField(default=dict, help_text='Additional theme configuration')),
                ('is_public', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('widget_type', models.CharField(choices=[('kpi_summary', 'KPI Summary'), ('kpi_chart', 'KPI Chart'), ('project_overview', 'Project Overview'), ('task_list', 'Task List'), ('recent_activity', 'Recent Activity'), ('alerts_summary', 'Alerts Summary'), ('team_performance', 'Team Performance'), ('calendar', 'Calendar'), ('notes', 'Notes'), ('custom_metric', 'Custom Metric'), ('external_embed', 'External Embed')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('config', models.JSONField(default=dict, help_text='Widget-specific configuration')),
                ('size', models.CharField(choices=[('small', 'Small (1x1)'), ('medium', 'Medium (2x1)'), ('large', 'Large (2x2)'), ('wide', 'Wide (3x1)'), ('tall', 'Tall (1x3)'), ('extra_large', 'Extra Large (3x2)')], default='medium', max_length=20)),
                ('refresh_interval', models.PositiveIntegerField(default=300, help_text='Auto-refresh interval in seconds')),
                ('cache_duration', models.PositiveIntegerField(default=60, help_text='Cache duration in seconds')),
                ('is_public', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_widgets', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, related_name='shared_widgets', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='UserDashboard',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='My Dashboard', max_length=200)),
                ('is_default', models.BooleanField(default=False)),
                ('layout_config', models.JSONField(default=dict, help_text='Dashboard layout and grid configuration')),
                ('auto_refresh', models.BooleanField(default=True)),
                ('refresh_interval', models.PositiveIntegerField(default=300, help_text='Dashboard refresh interval in seconds')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DashboardWidgetPlacement',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position_x', models.PositiveIntegerField(default=0)),
                ('position_y', models.PositiveIntegerField(default=0)),
                ('width', models.PositiveIntegerField(default=2)),
                ('height', models.PositiveIntegerField(default=2)),
                ('title_override', models.CharField(blank=True, max_length=200)),
                ('config_override', models.JSONField(blank=True, default=dict)),
                ('widget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='placements', to='dashboard.dashboardwidget')),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='widget_placements', to='dashboard.userdashboard')),
            ],
            options={
                'ordering': ['position_y', 'position_x'],
            },
        ),
        migrations.AddIndex(
            model_name='dashboardwidget',
            index=models.Index(fields=['tenant', 'widget_type'], name='dashboard_d_tenant__f58f11_idx'),
        ),
        migrations.AddIndex(
            model_name='dashboardwidget',
            index=models.Index(fields=['created_by', 'is_active'], name='dashboard_d_created_14bf1c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userdashboard',
            unique_together={('user', 'tenant', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='dashboardwidgetplacement',
            unique_together={('dashboard', 'widget')},
        ),
    ]
