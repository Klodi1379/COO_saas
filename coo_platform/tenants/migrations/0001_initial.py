# Generated by Django 5.2.2 on 2025-06-10 01:32

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Company/Organization name', max_length=200)),
                ('slug', models.SlugField(help_text='URL-friendly identifier', max_length=100, unique=True)),
                ('domain', models.CharField(blank=True, help_text='Custom domain (optional)', max_length=100)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('subscription_tier', models.CharField(choices=[('basic', 'Basic'), ('professional', 'Professional'), ('enterprise', 'Enterprise')], default='basic', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('trial', 'Trial'), ('cancelled', 'Cancelled')], default='trial', max_length=20)),
                ('trial_ends_at', models.DateTimeField(blank=True, null=True)),
                ('subscription_starts_at', models.DateTimeField(blank=True, null=True)),
                ('subscription_ends_at', models.DateTimeField(blank=True, null=True)),
                ('billing_email', models.EmailField(blank=True, max_length=254)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=100)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=100)),
                ('settings', models.JSONField(default=dict, help_text='Tenant-specific settings')),
                ('features', models.JSONField(default=list, help_text='Enabled features for this tenant')),
                ('max_users', models.PositiveIntegerField(default=3)),
                ('max_projects', models.PositiveIntegerField(default=5)),
                ('max_storage_mb', models.PositiveIntegerField(default=100)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='tenant_logos/')),
                ('primary_color', models.CharField(default='#007bff', help_text='Hex color code', max_length=7)),
                ('secondary_color', models.CharField(default='#6c757d', help_text='Hex color code', max_length=7)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['slug'], name='tenants_ten_slug_63daca_idx'), models.Index(fields=['status', 'subscription_tier'], name='tenants_ten_status_f5dd2f_idx')],
            },
        ),
        migrations.CreateModel(
            name='ActiveTenant',
            fields=[
            ],
            options={
                'verbose_name': 'Active Tenant',
                'verbose_name_plural': 'Active Tenants',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('tenants.tenant',),
        ),
        migrations.CreateModel(
            name='TrialTenant',
            fields=[
            ],
            options={
                'verbose_name': 'Trial Tenant',
                'verbose_name_plural': 'Trial Tenants',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('tenants.tenant',),
        ),
        migrations.CreateModel(
            name='TenantInvitation',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254)),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('admin', 'Administrator'), ('manager', 'Manager'), ('user', 'User'), ('viewer', 'Viewer')], default='user', max_length=20)),
                ('is_accepted', models.BooleanField(default=False)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField()),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='tenants.tenant')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('tenant', 'email')},
            },
        ),
        migrations.CreateModel(
            name='TenantUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('admin', 'Administrator'), ('manager', 'Manager'), ('user', 'User'), ('viewer', 'Viewer')], default='user', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('can_invite_users', models.BooleanField(default=False)),
                ('can_manage_projects', models.BooleanField(default=False)),
                ('can_manage_kpis', models.BooleanField(default=False)),
                ('can_view_analytics', models.BooleanField(default=True)),
                ('can_export_data', models.BooleanField(default=False)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenant_users', to='tenants.tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenant_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['role', 'user__first_name', 'user__last_name'],
                'unique_together': {('tenant', 'user')},
            },
        ),
    ]
