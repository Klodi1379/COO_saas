# Generated by Django 5.2.2 on 2025-06-10 01:32

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AutomationAction',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('send_email', 'Send Email'), ('send_notification', 'Send Notification'), ('create_task', 'Create Task'), ('update_task', 'Update Task Status'), ('send_slack_message', 'Send Slack Message'), ('webhook_call', 'Call Webhook'), ('create_kpi_datapoint', 'Create KPI Data Point'), ('generate_report', 'Generate Report'), ('assign_user', 'Assign User to Task/Project'), ('custom_script', 'Execute Custom Script')], max_length=30)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('action_config', models.JSONField(default=dict, help_text='JSON configuration for the action parameters')),
                ('is_enabled', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=1, help_text='Execution order within the rule')),
                ('continue_on_failure', models.BooleanField(default=True, help_text='Continue executing other actions if this one fails')),
                ('delay_seconds', models.PositiveIntegerField(default=0, help_text='Delay before executing this action')),
                ('max_retries', models.PositiveIntegerField(default=0, help_text='Number of retry attempts on failure')),
                ('retry_delay_seconds', models.PositiveIntegerField(default=60, help_text='Delay between retry attempts')),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AutomationRule',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('draft', 'Draft'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('trigger_type', models.CharField(choices=[('kpi_threshold', 'KPI Threshold'), ('task_status', 'Task Status Change'), ('project_milestone', 'Project Milestone'), ('time_based', 'Time-based Schedule'), ('data_anomaly', 'Data Anomaly Detection'), ('user_action', 'User Action'), ('external_event', 'External Event')], max_length=30)),
                ('trigger_config', models.JSONField(default=dict, help_text='JSON configuration for the trigger conditions')),
                ('is_enabled', models.BooleanField(default=True)),
                ('run_once', models.BooleanField(default=False, help_text='Execute only once when triggered')),
                ('max_executions', models.PositiveIntegerField(blank=True, help_text='Maximum number of times this rule can execute', null=True)),
                ('execution_count', models.PositiveIntegerField(default=0)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
                ('next_check', models.DateTimeField(blank=True, null=True)),
                ('priority', models.PositiveIntegerField(default=5, help_text='Execution priority (1=highest, 10=lowest)')),
                ('timeout_seconds', models.PositiveIntegerField(default=300, help_text='Maximum execution time in seconds')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_rules', to=settings.AUTH_USER_MODEL)),
                ('team_access', models.ManyToManyField(blank=True, help_text='Users who can view and modify this rule', related_name='accessible_rules', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
            ],
            options={
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AutomationLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('success', 'Success'), ('error', 'Error'), ('partial', 'Partial Success'), ('skipped', 'Skipped')], max_length=20)),
                ('message', models.TextField()),
                ('execution_time_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('trigger_data', models.JSONField(blank=True, default=dict)),
                ('result_data', models.JSONField(blank=True, default=dict)),
                ('action', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='automation.automationaction')),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='automation.automationrule')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='automationaction',
            name='rule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='automation.automationrule'),
        ),
        migrations.CreateModel(
            name='AutomationSchedule',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('frequency', models.CharField(choices=[('once', 'One Time'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly'), ('custom', 'Custom Cron')], max_length=20)),
                ('start_time', models.TimeField(help_text='Time of day to run (for recurring schedules)')),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('cron_expression', models.CharField(blank=True, help_text="Custom cron expression (when frequency is 'custom')", max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('rule', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='schedule', to='automation.automationrule')),
            ],
            options={
                'ordering': ['next_run'],
            },
        ),
        migrations.AddIndex(
            model_name='automationrule',
            index=models.Index(fields=['tenant', 'status', 'is_enabled'], name='automation__tenant__02493c_idx'),
        ),
        migrations.AddIndex(
            model_name='automationrule',
            index=models.Index(fields=['trigger_type', 'next_check'], name='automation__trigger_2aaed4_idx'),
        ),
        migrations.AddIndex(
            model_name='automationrule',
            index=models.Index(fields=['created_by', 'status'], name='automation__created_84e4c9_idx'),
        ),
        migrations.AddIndex(
            model_name='automationlog',
            index=models.Index(fields=['rule', 'status', 'created_at'], name='automation__rule_id_018f24_idx'),
        ),
        migrations.AddIndex(
            model_name='automationlog',
            index=models.Index(fields=['created_at'], name='automation__created_3d22fe_idx'),
        ),
    ]
